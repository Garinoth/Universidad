// Clase de cliente que proporciona el API del servicio DFS

package dfs;

import java.io.*;
import java.rmi.*;

public class DFSFicheroCliente  {
	
	private DFSCliente dfs;
	private DFSServicio srv;
	private DFSFicheroServ f;
	private Cache cache;
	private int tamBloque;
	private int position;
	
    public DFSFicheroCliente(DFSCliente dfs, String nombre, String modo) throws RemoteException, IOException, FileNotFoundException {
    	this.dfs = dfs;
    	this.srv = dfs.getServicio();
    	this.f = (DFSFicheroServ) srv.abrir(nombre, modo);
    	this.cache = dfs.getCache(nombre);
    	this.tamBloque = dfs.getTamBloque();
    	this.position = 0;
    }
    public int read(byte[] b) throws RemoteException, IOException {
    	int tam = b.length;
    	int bloques = tam / this.tamBloque;
    	Integer position = 0;
    	
    	for (int i = 0; i < bloques; i++) {
    		Object[] buff = new Object[2];
    		buff = f.read(this.tamBloque);
    		Integer leido = (Integer)buff[0];
        	if (leido > 0) System.arraycopy(buff[1], position, b, position, leido);
        	else leido = 0;
    		position += leido;
    	}
    	
    	return (int)position;
    }
    
    public void write(byte[] b) throws RemoteException, IOException {
    	f.write(b);
    }
    
    public void seek(long p) throws RemoteException, IOException {
    	f.seek(p);
    }
    
    public void close() throws RemoteException, IOException {
    	f.close();
    }
}
